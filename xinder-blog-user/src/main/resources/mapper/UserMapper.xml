<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinder.user.mapper.UserMapper">
    <select id="loadUserByUsername" resultType="com.xinder.api.bean.User">
        SELECT * FROM user WHERE username = #{username}
    </select>
    <insert id="reg" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user set username=#{username},password=#{password},nickname=#{nickname}
    </insert>
    <update id="updateUserEmail">
        UPDATE user set email=#{email} WHERE id=#{id}
    </update>

    <select id="getUserByNickname" resultMap="baseMap">
        SELECT id, username, nickname, password, enabled, email, userface, reg_time, openid, gender, create_time
        FROM user u
        <choose>
            <when test="nickname!=null and nickname!=''">
                and u.nickname like concat('%',#{nickname},'%') ORDER BY u.`id`
            </when>
            <otherwise>
                ORDER BY u.`id`
            </otherwise>
        </choose>
    </select>

    <select id="getUserById" resultMap="baseMap">
        SELECT  id, username, nickname, password, enabled, email, userface, reg_time, openid, gender, create_time
        FROM user u
        where id = #{id}
    </select>

    <resultMap id="BaseResultMap" type="com.xinder.api.bean.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="password" property="password"/>
        <result column="enabled" property="enabled"/>
        <result column="email" property="email"/>
        <result column="userface" property="userface"/>
        <result column="regTime" property="regTime"/>
        <collection property="roles" ofType="com.xinder.api.bean.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
        </collection>
    </resultMap>

    <select id="getAllRole" resultType="com.xinder.api.bean.Role">
        select * from roles;
    </select>
    <update id="updateUserEnabled">
        UPDATE user set enabled=#{enabled} WHERE id=#{uid}
    </update>
    <delete id="deleteUserById">
        DELETE FROM user WHERE id=#{id}
    </delete>
    <delete id="deleteUserRolesByUid">
        DELETE FROM roles_user WHERE uid=#{id}
    </delete>
    <insert id="setUserRoles">
        INSERT INTO roles_user(rid,uid) VALUES
        <foreach collection="rids" separator="," item="rid">
            (#{rid},#{id})
        </foreach>
    </insert>

    <resultMap id="baseMap" type="com.xinder.api.bean.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="password" property="password"/>
        <result column="enabled" property="enabled"/>
        <result column="email" property="email"/>
        <result column="userface" property="userface"/>
        <result column="reg_time" property="regTime"/>
        <result column="create_time" property="createTime"/>
        <result column="openid" property="openid"/>
        <result column="gender" property="gender"/>
        <collection  column="id" property="roles" ofType="com.xinder.api.bean.Role"
           select="com.xinder.user.mapper.RolesMapper.getRolesByUid" />
    </resultMap>

    <select id="selectByOpenid" resultMap="baseMap">
        SELECT  id, username, nickname, password, enabled, email, userface, reg_time, openid, gender, create_time
        FROM user u
        where openid = #{openid}
    </select>

    <select id="selectBatchByFollow" resultMap="BaseResultMap">
        SELECT
            u.id,
            u.username,
            u.nickname,
            u.password,
            u.enabled,
            u.email,
            u.userface,
            u.reg_time,
            u.openid,
            u.gender,
            u.create_time
        FROM user u left join follow f on u.id = f.followed_uid
        where f.uid = #{uid}
    </select>

    <select id="selectBatchFans" resultMap="BaseResultMap">
         SELECT
            u.id,
            u.username,
            u.nickname,
            u.password,
            u.enabled,
            u.email,
            u.userface,
            u.reg_time,
            u.openid,
            u.gender,
            u.create_time
        FROM user u left join follow f on u.id = f.uid
        where f.followed_uid = #{uid}
    </select>
</mapper>
