<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinder.article.mapper.ArticleMapper">
    <insert id="addNewArticle" parameterType="com.xinder.api.bean.Article" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO article
        SET title=#{title},
            md_content=#{mdContent},
            html_content=#{htmlContent},
            summary=#{summary},
            cid=#{cid},
            uid=#{uid},
            create_time=#{createTime},
            state=#{state},
            edit_time=#{editTime}
    </insert>
    <update id="pvIncrement" parameterType="Long">
        UPDATE article
        set read_count = read_count + 1
        WHERE id = #{aid}
    </update>

    <update id="updateArticle" parameterType="com.xinder.api.bean.Article">
        UPDATE article SET
        title=#{title},md_content=#{mdContent},
        html_content=#{htmlContent},summary=#{summary},cid=#{cid},edit_time=#{editTime},remark=#{remark}
        <if test="state!=null">
            ,state=#{state}
        </if>
        <if test="attachment!=null">
            ,attachment=#{attachment}
        </if>
        <if test="headPic!=null">
            ,head_pic=#{headPic}
        </if>
        <if test="commentFlag!=null">
            ,comment_flag=#{commentFlag}
        </if>
        WHERE id=#{id}
    </update>

    <resultMap id="articleMap" type="com.xinder.api.bean.Article">
        <result column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="md_content" property="mdContent"/>
        <result column="html_content" property="htmlContent"/>
        <result column="summary" property="summary"/>
        <result column="edit_time" property="editTime"/>
        <result column="state" property="state"/>
        <result column="read_count" property="readCount"/>
        <result column="create_time" property="createTime"/>
        <result column="uid" property="uid"/>
        <result column="cid" property="cid"/>
        <result column="remark" property="remark"/>
        <result column="head_pic" property="headPic"/>
        <result column="nickname" property="nickname"/>
        <result column="cate_name" property="cateName"/>
        <result column="attachment" property="attachment"/>

        <collection column="id" property="tags" ofType="com.xinder.api.bean.Tags"
                    select="com.xinder.article.mapper.TagsMapper.selectByAid"/>
    </resultMap>

    <select id="getArticleByState" resultMap="articleMap">
        SELECT
        a.id as id,
        a.`title` as title,
        a.summary as summary,
        a.`edit_time` as edit_time,
        <!--        a.`page_view` as page_view,-->
        a.`state` as state ,
        a.`create_time` as create_time ,
        a.uid as uid,
        u.`nickname` as nickname,
        c.`cate_name` as cate_name
        FROM article a, `user` u, category c
        WHERE a.`cid`=c.`id` AND a.`uid`=u.`id`
        <if test="state!=null">
            <if test="state!='-1'">
                and a.state = #{state}
            </if>
        </if>

        <if test="keywords!=null">
            AND title LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY a.id DESC limit #{offset},#{count};
    </select>

    <select id="getArticleByStateByAdmin" resultType="com.xinder.api.bean.Article">
        SELECT
        a.id as id,
        a.`title`,
        a.`editTime`,
        a.`pageView`,
        a.`state`,
        u.`nickname`,
        c.`cateName`,
        a.uid
        FROM article a,user
        u,category c WHERE a.`cid`=c.`id` AND a.`uid`=u.`id` and a.state=1
        <if test="keywords!=null">
            AND title LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY a.editTime DESC limit #{start},#{count};
    </select>

    <select id="getArticleCountByState" resultType="int">
        SELECT count(*)
        FROM article
        <where>
            <if test="state!=-1">
                AND state=#{state}
            </if>
            <if test="keywords!=null">
                AND title LIKE concat('%',#{keywords},'%')
            </if>
        </where>
    </select>
    <update id="updateArticleState">
        UPDATE article SET state=#{state} WHERE id IN
        <foreach collection="aids" item="aid" separator="," open="(" close=")">
            #{aid}
        </foreach>
    </update>
    <update id="updateArticleStateById">
        UPDATE article
        SET state=#{state}
        WHERE id = #{articleId}
    </update>

    <delete id="deleteArticleById">
        DELETE FROM article WHERE id IN
        <foreach collection="aids" item="aid" open="(" close=")" separator=",">
            #{aid}
        </foreach>
    </delete>

    <select id="getArticleById" parameterType="Long" resultMap="articleMap">
        select a.id as id,
        a.`title` as title,
        a.md_content,
        a.html_content,
        a.summary as summary,
        a.`edit_time` as edit_time,
        <!--               a.`page_view`   as page_view,-->
        a.`state` as state,
        a.`create_time` as create_time,
        a.uid as uid,
        a.read_count,
        a.head_pic,
        a.attachment,
        a.comment_flag,
        a.remark,
        u.`nickname` as nickname,
        c.id as cid,
        c.`cate_name` as cate_name
        FROM article a
        LEFT JOIN `user` u ON a.`uid` = u.`id`
        LEFT JOIN category c ON a.`cid` = c.`id`
        WHERE a.id = #{aid}
    </select>

    <resultMap id="BaseResultMap" type="com.xinder.api.bean.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="cid" property="cid"/>
        <result column="uid" property="uid"/>
        <result column="publishDate" property="createTime"/>
        <result column="editTime" property="editTime"/>
        <result column="state" property="state"/>
        <result column="pageView" property="pageView"/>
        <result column="mdContent" property="mdContent"/>
        <result column="htmlContent" property="htmlContent"/>
        <result column="summary" property="summary"/>
        <result column="nickname" property="nickname"/>
        <result column="cateName" property="cateName"/>
        <collection property="tags" ofType="com.xinder.api.bean.Tags" column="tagName">
            <id property="id" column="tid"/>
            <result property="tagName" column="tagName"/>
        </collection>
    </resultMap>

    <insert id="pvStatisticsPerDay">
        INSERT INTO pv(countDate, pv, uid)
        SELECT CURRENT_DATE(), totalPv - pv, t.`uid`
        FROM pvview p,
             totalpvview t
        WHERE p.`uid` = t.`uid`
    </insert>

    <select id="getCategories" resultType="String" parameterType="long">
        SELECT countDate
        from pv
        WHERE uid = #{uid}
        ORDER by countDate
        limit 7
    </select>
    <select parameterType="long" id="getDataStatistics" resultType="int">
        SELECT pv
        from pv
        WHERE uid = #{uid}
        ORDER by countDate
        limit 7
    </select>

    <select id="getCount" resultType="java.lang.Long">
        select count(*)
        from article a
        <where>
            <if test="req.state!=null">
                and state = #{req.state}
            </if>
            <if test="req.uid != null">
                and a.uid = #{req.uid}
            </if>
            <if test="keyword != null">
                AND title LIKE concat('%',#{keyword},'%')
            </if>
        </where>
    </select>

    <select id="getArticleList" resultMap="articleMap">
        SELECT
        a.id as id,
        a.`title` as title,
        a.summary as summary,
        a.`edit_time` as edit_time,
        <!--        a.`page_view` as page_view,-->
        a.`state` as state ,
        a.`create_time` as create_time ,
        a.`read_count` as read_count,
        a.uid as uid,
        a.cid as cid,
        a.head_pic as head_pic,
        a.remark as remark,
        u.`nickname` as nickname,
        c.`cate_name` as cate_name
        FROM article a, `user` u, category c
        WHERE a.`cid`=c.`id` AND a.`uid`=u.`id`
        <if test="req != null">
            <if test="req.state != null">
                and a.state = #{req.state}
            </if>
            <if test="req.uid != null">
                and a.uid = #{req.uid}
            </if>
        </if>

        <if test="keywords != null and keywords != ''">
            AND title LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY a.id DESC
        <if test="offset != null and req.pageSize != null">
            limit #{offset}, #{req.pageSize};
        </if>
    </select>

    <update id="batchUpdateStateById">
        update article set state = #{state}
        where id in
        <foreach collection="articleList" item="item" open="(" close=")" separator=",">
            #{item.id}
        </foreach>
    </update>

    <select id="selectBatchByIds" resultMap="articleMap">
        select a.id as id,
        a.`title` as title,
        a.md_content,
        a.html_content,
        a.summary as summary,
        a.`edit_time` as edit_time,
        <!--               a.`page_view`   as page_view,-->
        a.`state` as state,
        a.`create_time` as create_time,
        a.uid as uid,
        a.read_count,
        a.head_pic,
        a.attachment,
        a.comment_flag,
        a.remark,
        u.`nickname` as nickname,
        c.id as cid,
        c.`cate_name` as cate_name
        FROM article a
        LEFT JOIN `user` u ON a.`uid` = u.`id`
        LEFT JOIN category c ON a.`cid` = c.`id`
        WHERE a.id in
        <foreach collection="aids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
</mapper>
